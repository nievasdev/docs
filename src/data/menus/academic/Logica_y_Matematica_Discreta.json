{
    "title":"Logica y Matematica Discreta",
    "sections":[
        {
            "title": "Booleanos",
            "items" : [
                {
                    "title": "Operaciones",
                    "content" : {
                        "sections":[
                            {
                                "type": "paragraph",
                                "text": "El boleano consta unicamente de 2 valores, True y False, la siguiente es la codificación de Booleanos en Haskell"
                            },
                            {
                                "type": "code",
                                "text": "data Bool = False | True"
                            },
                            {
                                "type": "heading",
                                "level": "2",
                                "text": "Operador Case"
                            },
                            {
                                "type": "paragraph",
                                "text": "Tenemos disponible el operador case que, dada una expresión booleana, permite analizar sus posibles valores (False o True)"
                            },
                            {
                                "type": "code",
                                "text": "\\x -> case x of { \n False -> True; \n True -> False \n } "
                            },
                            {
                                "type": "paragraph",
                                "text": "obviamente, la funcion tiene tipo Bool -> Bool"
                            }

                        ]
                    }
                },
                {
                    "title": "infija y Prefija",
                    "content" :
                    {
                        "sections": [
                            {
                                "type": "paragraph",
                                "text": "al utilizar la conjunción, uno quisiera escribir a && b en lugar de conj a b que es lo que obtenemos de la definición precedente. La primera notación, en la que el símbolo correspondiente a la oporación aparece entre sus argumentos, es llamada infija. La otra, en la que el nombre de la oporación precede a los argumentos, es llamada prefija"
                            }
                        ]
                    }
                },
                {
                    "title": "Operadores logicos",
                    "content" :
                    {
                        "sections": [
                            {
                                "type": "paragraph",
                                "text": "Bool es de hecho un tipo predefinido en Haskell, con las operaciones siguientes:"
                            },
                            {
                                "type":"list",
                                "items": [
                                    "not = Negación",
                                    "(&&) = Conjunción",
                                    "(||) = Disyunción",
                                    "(==) = Bicondicional, igualdad",
                                    "(/=) = Disyunción excluyente, desigualdad"
                                ]
                            }
                        ]
                    }
                }
            ]
        },
        {
            "title": "Lógica Proposicional",
            "items": [
                {
                    "title" : "Conectivas Logicas",
                    "content" : {
                        "sections": [
                            {
                                "type":"paragraph",
                                "text": "Las proposiciones no solamente se conforman por afirmaciones con un valor de verdad, también existen proposiciones que su valor de verdad depende de la unión de varias proposiciones mediante el uso de conectivas lógicas. Estas conectivas son, ni más ni menos, que las operaciones booleanas que se ha visto en clase con su tabla de verdad y su definición en Haskell. En el formalismo de la Lógica Proposicional utilizaremos otro símbolo para referirnos a estas \"operaciones\" que llamamos conectivas lógicas, pero que semánticamente son las mismas."
                            }
                        ]
                    }
                }
            ]
        }
    ]
}
